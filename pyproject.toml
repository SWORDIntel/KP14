[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | keyplug_venv
  | kp14_qa_venv
  | _build
  | buck-out
  | build
  | dist
  | archive
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/keyplug_venv/*", "*/kp14_qa_venv/*", "*/archive/*"]

[tool.pylint.main]
max-line-length = 100
disable = [
    "C0111",  # missing-docstring (we'll add them selectively)
    "R0801",  # duplicate-code (complex to fix immediately)
]

[tool.pylint.messages_control]
max-args = 7
max-attributes = 10
max-locals = 15
max-branches = 12

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true  # Now enforced for all modules
disallow_any_unimported = false  # Too strict for external libs
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true
strict_equality = true
strict_concatenate = true
disallow_untyped_calls = false  # Gradual - would require all deps to have stubs
disallow_incomplete_defs = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Ignore missing imports for third-party libraries without stubs
ignore_missing_imports = true

exclude = [
    "keyplug_venv",
    "kp14_qa_venv",
    "archive",
    "tests",  # Tests can be less strict
]

# Archive modules - ignore completely
[[tool.mypy.overrides]]
module = "archive.*"
ignore_errors = true

# Test modules - allow untyped defs
[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = false

# Legacy analyzer modules - gradual typing
[[tool.mypy.overrides]]
module = "stego-analyzer.utils.*"
disallow_untyped_defs = false
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "stego-analyzer.analysis.*"
disallow_untyped_defs = false
check_untyped_defs = true

# External module stubs not available
[[tool.mypy.overrides]]
module = [
    "jpegio.*",
    "capstone.*",
    "pefile.*",
    "cv2.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [
    "keyplug_venv",
    "kp14_qa_venv",
    "archive",
    "tests",
]
skips = ["B101"]  # Skip assert_used warnings in non-test code

[tool.coverage.run]
source = ["."]
omit = [
    "*/keyplug_venv/*",
    "*/kp14_qa_venv/*",
    "*/archive/*",
    "*/tests/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "kp14"
version = "2.0.0"
description = "KP14: Advanced Steganographic Analysis & Malware Intelligence Platform"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "KP14 Development Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "jpegio",
    "numpy>=1.26.4",
    "Pillow>=10.0.1",
    "opencv-python>=4.8.0",
    "pycparser>=2.21",
    "matplotlib>=3.8.0",
    "capstone>=5.0.1",
    "pefile>=2023.2.7",
    "cryptography>=42.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.0.0",
    "pylint>=3.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "pre-commit>=3.0.0",
]
ml = [
    "openvino>=2024.1.0",
    "torch>=2.1.0",
]
