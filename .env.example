# ==============================================================================
# KP14 Environment Configuration Example
# ==============================================================================
#
# This file contains example configuration for sensitive settings that should
# NEVER be committed to version control. Copy this file to .env and fill in
# your actual values.
#
# Security Notes:
# - Never commit .env to git (already in .gitignore)
# - Use strong, unique values for all credentials
# - Rotate credentials regularly
# - Use principle of least privilege for API keys
# - Consider using a secrets manager in production
#
# ==============================================================================

# ------------------------------------------------------------------------------
# Third-Party API Keys (Optional - for enrichment features)
# ------------------------------------------------------------------------------

# VirusTotal API Key (for malware hash lookups)
# Get your key from: https://www.virustotal.com/gui/my-apikey
VIRUSTOTAL_API_KEY=your_virustotal_api_key_here

# Shodan API Key (for IP/domain enrichment)
# Get your key from: https://account.shodan.io/
SHODAN_API_KEY=your_shodan_api_key_here

# Censys API Credentials (for certificate/host lookups)
# Get credentials from: https://censys.io/account/api
CENSYS_API_ID=your_censys_api_id_here
CENSYS_API_SECRET=your_censys_api_secret_here

# AlienVault OTX API Key (for threat intelligence)
# Get your key from: https://otx.alienvault.com/api
OTX_API_KEY=your_otx_api_key_here

# MalwareBazaar API Key (optional, public API available)
# Get your key from: https://bazaar.abuse.ch/api/#account
MALWAREBAZAAR_API_KEY=your_malwarebazaar_api_key_here

# ------------------------------------------------------------------------------
# MISP Integration (Optional)
# ------------------------------------------------------------------------------

# MISP Server URL and API Key
MISP_URL=https://your-misp-instance.com
MISP_API_KEY=your_misp_api_key_here

# MISP SSL Verification (set to false for self-signed certificates)
MISP_VERIFY_SSL=true

# ------------------------------------------------------------------------------
# Database Configuration (Optional - for result storage)
# ------------------------------------------------------------------------------

# PostgreSQL Configuration
DB_HOST=localhost
DB_PORT=5432
DB_NAME=kp14_results
DB_USER=kp14_user
DB_PASSWORD=your_secure_database_password_here

# Redis Configuration (for caching)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=your_redis_password_here

# ------------------------------------------------------------------------------
# OpenVINO Model Encryption (Optional)
# ------------------------------------------------------------------------------

# Encryption key for protecting ML models at rest
# Generate with: python -c "import secrets; print(secrets.token_hex(32))"
MODEL_ENCRYPTION_KEY=your_64_character_hex_key_here

# ------------------------------------------------------------------------------
# LLM API Configuration (Optional - for advanced analysis)
# ------------------------------------------------------------------------------

# OpenAI API Key (for GPT-based code analysis)
OPENAI_API_KEY=your_openai_api_key_here

# Local LLM Endpoint (alternative to OpenAI)
LLM_API_BASE_URL=http://localhost:8000/v1
LLM_API_KEY=your_local_llm_api_key_here

# ------------------------------------------------------------------------------
# Webhook Notification URLs (Optional)
# ------------------------------------------------------------------------------

# Slack Webhook for alerts
SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/WEBHOOK/URL

# Discord Webhook for alerts
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/YOUR_WEBHOOK_URL

# Custom Webhook for analysis completion
CUSTOM_WEBHOOK_URL=https://your-service.com/webhook

# ------------------------------------------------------------------------------
# Sandbox API Keys (Optional - for dynamic analysis integration)
# ------------------------------------------------------------------------------

# Cuckoo Sandbox API
CUCKOO_API_URL=http://your-cuckoo-instance:8090
CUCKOO_API_KEY=your_cuckoo_api_key_here

# Joe Sandbox API
JOE_SANDBOX_API_KEY=your_joe_sandbox_api_key_here

# ANY.RUN API
ANYRUN_API_KEY=your_anyrun_api_key_here

# ------------------------------------------------------------------------------
# Email Configuration (Optional - for report delivery)
# ------------------------------------------------------------------------------

SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_USERNAME=your_email@example.com
SMTP_PASSWORD=your_email_app_password_here
SMTP_FROM=kp14-reports@example.com

# ------------------------------------------------------------------------------
# Security Settings
# ------------------------------------------------------------------------------

# Secret key for session management and token generation
# Generate with: python -c "import secrets; print(secrets.token_urlsafe(32))"
SECRET_KEY=your_secret_key_for_session_management_here

# JWT Secret for API authentication
JWT_SECRET=your_jwt_secret_key_here

# API Rate Limiting
RATE_LIMIT_PER_MINUTE=60

# ------------------------------------------------------------------------------
# Development/Debug Settings
# ------------------------------------------------------------------------------

# Enable debug mode (NEVER use in production!)
DEBUG=false

# Log level (DEBUG, INFO, WARNING, ERROR, CRITICAL)
LOG_LEVEL=INFO

# Enable verbose output
VERBOSE=false

# ------------------------------------------------------------------------------
# KP14 Configuration Overrides (settings.ini overrides)
# ------------------------------------------------------------------------------
# These environment variables override values from settings.ini
# Format: KP14_SECTION_OPTION (e.g., KP14_GENERAL_LOG_LEVEL)
#
# Priority: Environment Variables > settings.ini > Defaults

# General Settings
# KP14_GENERAL_PROJECT_ROOT=/custom/project/root
# KP14_GENERAL_OUTPUT_DIR=/custom/output
# KP14_GENERAL_LOG_LEVEL=DEBUG
# KP14_GENERAL_VERBOSE=true

# Path Settings
# KP14_PATHS_LOG_DIR_NAME=custom_logs
# KP14_PATHS_EXTRACTED_DIR_NAME=custom_extracted
# KP14_PATHS_GRAPHS_DIR_NAME=custom_graphs
# KP14_PATHS_MODELS_DIR_NAME=custom_models

# PE Analyzer Settings
# KP14_PE_ANALYZER_ENABLED=true
# KP14_PE_ANALYZER_MAX_FILE_SIZE_MB=200
# KP14_PE_ANALYZER_SCAN_ON_IMPORT=false

# Code Analyzer Settings
# KP14_CODE_ANALYZER_ENABLED=true
# KP14_CODE_ANALYZER_MAX_RECURSION_DEPTH=15
# KP14_CODE_ANALYZER_ANALYZE_LIBRARIES=false

# Obfuscation Analyzer Settings
# KP14_OBFUSCATION_ANALYZER_ENABLED=true
# KP14_OBFUSCATION_ANALYZER_STRING_ENTROPY_THRESHOLD=4.5
# KP14_OBFUSCATION_ANALYZER_MAX_SUSPICIOUS_LOOPS=5

# Hardware Acceleration Settings (if applicable)
# KP14_HARDWARE_PREFER_NPU=true
# KP14_HARDWARE_DEVICE_SELECTION=auto
# KP14_HARDWARE_USE_GPU=true
# KP14_HARDWARE_GPU_MEMORY_LIMIT=4096

# ------------------------------------------------------------------------------
# Cloud Storage (Optional - for large file storage)
# ------------------------------------------------------------------------------

# AWS S3 Configuration
AWS_ACCESS_KEY_ID=your_aws_access_key_here
AWS_SECRET_ACCESS_KEY=your_aws_secret_key_here
AWS_S3_BUCKET=kp14-samples-bucket
AWS_REGION=us-east-1

# Azure Blob Storage Configuration
AZURE_STORAGE_ACCOUNT=your_storage_account_name
AZURE_STORAGE_KEY=your_storage_account_key_here
AZURE_CONTAINER_NAME=kp14-samples

# ------------------------------------------------------------------------------
# License Keys (if using commercial tools)
# ------------------------------------------------------------------------------

# IDA Pro License
IDA_LICENSE_KEY=your_ida_pro_license_here

# Ghidra License (if applicable)
GHIDRA_LICENSE_KEY=your_ghidra_license_here

# ==============================================================================
# END OF CONFIGURATION
# ==============================================================================

# SECURITY REMINDERS:
# 1. This file (.env) should be in .gitignore - NEVER commit it!
# 2. Use strong, unique passwords for all services
# 3. Rotate credentials regularly (every 90 days minimum)
# 4. Use read-only API keys where possible
# 5. Monitor API usage for anomalies
# 6. Consider using HashiCorp Vault or AWS Secrets Manager in production
# 7. Encrypt this file at rest if storing on shared systems
# 8. Use environment-specific .env files (.env.prod, .env.dev)
# 9. Audit access to this file regularly
# 10. Document which services actually need which credentials
