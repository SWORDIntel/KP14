name: Integration Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  integration-tests:
    name: Integration Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          python3-dev \
          libssl-dev \
          libffi-dev \
          libjpeg-dev \
          libpng-dev \
          zlib1g-dev

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-test.txt
        pip install pytest pytest-cov pytest-timeout pytest-xdist

    - name: Install analysis dependencies
      run: |
        pip install pillow numpy openvino || true
        pip install pefile capstone || true

    - name: Run integration tests
      timeout-minutes: 15
      run: |
        pytest tests/integration/ \
          -v \
          -m "integration and not docker and not hardware" \
          --timeout=300 \
          --tb=short \
          --junit-xml=integration-test-results.xml \
          --cov=. \
          --cov-report=xml \
          --cov-report=term-missing

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: integration-test-results-${{ matrix.python-version }}
        path: |
          integration-test-results.xml
          coverage.xml

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: integration
        name: integration-tests

  integration-tests-docker:
    name: Integration Tests (Docker)
    runs-on: ubuntu-latest
    timeout-minutes: 45

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build Docker image
      run: |
        docker build -t kp14-test:latest .

    - name: Set up Python for test runner
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install test dependencies
      run: |
        pip install pytest pytest-timeout

    - name: Run Docker integration tests
      timeout-minutes: 20
      run: |
        pytest tests/integration/test_docker_integration.py \
          -v \
          -m "docker" \
          --timeout=600 \
          --junit-xml=docker-test-results.xml

    - name: Upload Docker test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: docker-test-results
        path: docker-test-results.xml

  integration-tests-summary:
    name: Integration Tests Summary
    runs-on: ubuntu-latest
    needs: [integration-tests, integration-tests-docker]
    if: always()

    steps:
    - name: Check integration tests status
      run: |
        echo "Integration tests completed"
        echo "Regular tests: ${{ needs.integration-tests.result }}"
        echo "Docker tests: ${{ needs.integration-tests-docker.result }}"

        if [ "${{ needs.integration-tests.result }}" != "success" ]; then
          echo "::warning::Integration tests failed"
          exit 1
        fi
